---
description: React component patterns and best practices
globs: "**/*.tsx,**/*.jsx"
alwaysApply: false
---

# React Component Guidelines

Follow these patterns when creating React components:

## Component Structure

1. Props interface at the top
2. Component as named export
3. Hooks and logic in the middle
4. JSX return at the bottom

## Best Practices

- Use functional components with hooks
- Extract custom hooks for reusable logic
- Keep components small and focused
- Use TypeScript for all props
- Implement proper error boundaries

## Example Template

```tsx
interface ButtonProps {
  variant: 'primary' | 'secondary';
  children: React.ReactNode;
  onClick?: () => void;
  disabled?: boolean;
}

export const Button: React.FC<ButtonProps> = ({
  variant,
  children,
  onClick,
  disabled = false
}) => {
  const handleClick = () => {
    if (!disabled && onClick) {
      onClick();
    }
  };

  return (
    <button
      className={`btn btn-${variant}`}
      onClick={handleClick}
      disabled={disabled}
    >
      {children}
    </button>
  );
};
```

@component-template.tsx
